# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

jobs:
- job: Building
  pool:
    vmImage: ubuntu-latest
  displayName: Build

  steps:

#  - task: Gradle@2
#    inputs:
#      workingDirectory: ''
#      gradleWrapperFile: 'gradlew'
#      gradleOptions: '-Xmx3072m'
#      javaHomeOption: 'JDKVersion'
#      jdkVersionOption: '1.8'
#      jdkArchitectureOption: 'x64'
#      publishJUnitResults: true
#      testResultsFiles: '**/TEST-*.xml'
#      tasks: 'build'
  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'build'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: false
      spotBugsAnalysis: false
    displayName: Build

  - task: Maven@4
    inputs:
      mavenPomFile: 'pom.xml'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      codeCoverageToolOption: 'JaCoCo'
      javaHomeOption: 'JDKVersion'
      mavenVersionOption: 'Default'
      mavenAuthenticateFeed: false
      effectivePomSkip: false
      sonarQubeRunAnalysis: false

  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'sonarcloud'
      organization: 'diego-godoy'
      projectKey: 'diego-godoy_feature-ms-DiegoGodoy-mensaje'
      projectName: 'feature-ms-DiegoGodoy-mensaje'
    displayName: 'SonarCloud Prepare'
      
  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'sonarqube'
      publishJUnitResults: true
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: true
      sqGradlePluginVersionChoice: 'specify'
      sonarQubeGradlePluginVersion: '3.3'
      spotBugsAnalysis: false

  - task: Docker@2
    inputs:
      containerRegistry: 'Docker'
      command: 'login'

  - task: Docker@2
    inputs:
      containerRegistry: 'Docker'
      repository: 'pzyborg/prueba_azure'
      command: 'build'
      Dockerfile: '**/Dockerfile'
      tags: |
              $(Build.BuildId)
              latest

  - task: Docker@2
    inputs:
      containerRegistry: 'Docker'
      repository: 'pzyborg/prueba_azure'
      command: 'push'
      tags: |
              $(Build.BuildId)
              latest

- job: Deploy
  dependsOn: Building
  pool: 'default'

  steps:
  - task: Kubernetes@1
    inputs:
      connectionType: 'None'
      command: 'create'
      arguments: 'deployment microservice --image=pzyborg/prueba_azure:latest'
      secretType: 'dockerRegistry'
      containerRegistryType: 'Azure Container Registry'
    displayName: 'deploy de la imagen ' 

#  - task: PowerShell@2
#    inputs:
#     targetType: 'inline'
#     script: 'Start-Job -ScriptBlock {kubectl port-forward deployment/microservice 8080:8080};'
#    displayName: 'Port forward'
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: 'kubectl port-forward deployment/microservice 8080:8080'